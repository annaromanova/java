/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package parquetconverter;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Pantheon extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4284513666761558164L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Pantheon\",\"namespace\":\"parquetconverter\",\"fields\":[{\"name\":\"en_curid\",\"type\":\"string\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"numlangs\",\"type\":\"string\"},{\"name\":\"birthcity\",\"type\":\"string\"},{\"name\":\"birthstate\",\"type\":\"string\"},{\"name\":\"countryName\",\"type\":\"string\"},{\"name\":\"countryCode\",\"type\":\"string\"},{\"name\":\"countryCode3\",\"type\":\"string\"},{\"name\":\"LAT\",\"type\":\"string\"},{\"name\":\"LON\",\"type\":\"string\"},{\"name\":\"continentName\",\"type\":\"string\"},{\"name\":\"birthyear\",\"type\":\"string\"},{\"name\":\"gender\",\"type\":\"string\"},{\"name\":\"occupation\",\"type\":\"string\"},{\"name\":\"industry\",\"type\":\"string\"},{\"name\":\"domain\",\"type\":\"string\"},{\"name\":\"TotalPageViews\",\"type\":\"string\"},{\"name\":\"L_star\",\"type\":\"string\"},{\"name\":\"StdDevPageViews\",\"type\":\"string\"},{\"name\":\"PageViewsEnglish\",\"type\":\"string\"},{\"name\":\"PageViewsNonEnglish\",\"type\":\"string\"},{\"name\":\"AverageViews\",\"type\":\"string\"},{\"name\":\"HPI\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Pantheon> ENCODER =
      new BinaryMessageEncoder<Pantheon>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Pantheon> DECODER =
      new BinaryMessageDecoder<Pantheon>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<Pantheon> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<Pantheon> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Pantheon>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this Pantheon to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a Pantheon from a ByteBuffer. */
  public static Pantheon fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence en_curid;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence numlangs;
  @Deprecated public java.lang.CharSequence birthcity;
  @Deprecated public java.lang.CharSequence birthstate;
  @Deprecated public java.lang.CharSequence countryName;
  @Deprecated public java.lang.CharSequence countryCode;
  @Deprecated public java.lang.CharSequence countryCode3;
  @Deprecated public java.lang.CharSequence LAT;
  @Deprecated public java.lang.CharSequence LON;
  @Deprecated public java.lang.CharSequence continentName;
  @Deprecated public java.lang.CharSequence birthyear;
  @Deprecated public java.lang.CharSequence gender;
  @Deprecated public java.lang.CharSequence occupation;
  @Deprecated public java.lang.CharSequence industry;
  @Deprecated public java.lang.CharSequence domain;
  @Deprecated public java.lang.CharSequence TotalPageViews;
  @Deprecated public java.lang.CharSequence L_star;
  @Deprecated public java.lang.CharSequence StdDevPageViews;
  @Deprecated public java.lang.CharSequence PageViewsEnglish;
  @Deprecated public java.lang.CharSequence PageViewsNonEnglish;
  @Deprecated public java.lang.CharSequence AverageViews;
  @Deprecated public java.lang.CharSequence HPI;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Pantheon() {}

  /**
   * All-args constructor.
   * @param en_curid The new value for en_curid
   * @param name The new value for name
   * @param numlangs The new value for numlangs
   * @param birthcity The new value for birthcity
   * @param birthstate The new value for birthstate
   * @param countryName The new value for countryName
   * @param countryCode The new value for countryCode
   * @param countryCode3 The new value for countryCode3
   * @param LAT The new value for LAT
   * @param LON The new value for LON
   * @param continentName The new value for continentName
   * @param birthyear The new value for birthyear
   * @param gender The new value for gender
   * @param occupation The new value for occupation
   * @param industry The new value for industry
   * @param domain The new value for domain
   * @param TotalPageViews The new value for TotalPageViews
   * @param L_star The new value for L_star
   * @param StdDevPageViews The new value for StdDevPageViews
   * @param PageViewsEnglish The new value for PageViewsEnglish
   * @param PageViewsNonEnglish The new value for PageViewsNonEnglish
   * @param AverageViews The new value for AverageViews
   * @param HPI The new value for HPI
   */
  public Pantheon(java.lang.CharSequence en_curid, java.lang.CharSequence name, java.lang.CharSequence numlangs, java.lang.CharSequence birthcity, java.lang.CharSequence birthstate, java.lang.CharSequence countryName, java.lang.CharSequence countryCode, java.lang.CharSequence countryCode3, java.lang.CharSequence LAT, java.lang.CharSequence LON, java.lang.CharSequence continentName, java.lang.CharSequence birthyear, java.lang.CharSequence gender, java.lang.CharSequence occupation, java.lang.CharSequence industry, java.lang.CharSequence domain, java.lang.CharSequence TotalPageViews, java.lang.CharSequence L_star, java.lang.CharSequence StdDevPageViews, java.lang.CharSequence PageViewsEnglish, java.lang.CharSequence PageViewsNonEnglish, java.lang.CharSequence AverageViews, java.lang.CharSequence HPI) {
    this.en_curid = en_curid;
    this.name = name;
    this.numlangs = numlangs;
    this.birthcity = birthcity;
    this.birthstate = birthstate;
    this.countryName = countryName;
    this.countryCode = countryCode;
    this.countryCode3 = countryCode3;
    this.LAT = LAT;
    this.LON = LON;
    this.continentName = continentName;
    this.birthyear = birthyear;
    this.gender = gender;
    this.occupation = occupation;
    this.industry = industry;
    this.domain = domain;
    this.TotalPageViews = TotalPageViews;
    this.L_star = L_star;
    this.StdDevPageViews = StdDevPageViews;
    this.PageViewsEnglish = PageViewsEnglish;
    this.PageViewsNonEnglish = PageViewsNonEnglish;
    this.AverageViews = AverageViews;
    this.HPI = HPI;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return en_curid;
    case 1: return name;
    case 2: return numlangs;
    case 3: return birthcity;
    case 4: return birthstate;
    case 5: return countryName;
    case 6: return countryCode;
    case 7: return countryCode3;
    case 8: return LAT;
    case 9: return LON;
    case 10: return continentName;
    case 11: return birthyear;
    case 12: return gender;
    case 13: return occupation;
    case 14: return industry;
    case 15: return domain;
    case 16: return TotalPageViews;
    case 17: return L_star;
    case 18: return StdDevPageViews;
    case 19: return PageViewsEnglish;
    case 20: return PageViewsNonEnglish;
    case 21: return AverageViews;
    case 22: return HPI;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: en_curid = (java.lang.CharSequence)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: numlangs = (java.lang.CharSequence)value$; break;
    case 3: birthcity = (java.lang.CharSequence)value$; break;
    case 4: birthstate = (java.lang.CharSequence)value$; break;
    case 5: countryName = (java.lang.CharSequence)value$; break;
    case 6: countryCode = (java.lang.CharSequence)value$; break;
    case 7: countryCode3 = (java.lang.CharSequence)value$; break;
    case 8: LAT = (java.lang.CharSequence)value$; break;
    case 9: LON = (java.lang.CharSequence)value$; break;
    case 10: continentName = (java.lang.CharSequence)value$; break;
    case 11: birthyear = (java.lang.CharSequence)value$; break;
    case 12: gender = (java.lang.CharSequence)value$; break;
    case 13: occupation = (java.lang.CharSequence)value$; break;
    case 14: industry = (java.lang.CharSequence)value$; break;
    case 15: domain = (java.lang.CharSequence)value$; break;
    case 16: TotalPageViews = (java.lang.CharSequence)value$; break;
    case 17: L_star = (java.lang.CharSequence)value$; break;
    case 18: StdDevPageViews = (java.lang.CharSequence)value$; break;
    case 19: PageViewsEnglish = (java.lang.CharSequence)value$; break;
    case 20: PageViewsNonEnglish = (java.lang.CharSequence)value$; break;
    case 21: AverageViews = (java.lang.CharSequence)value$; break;
    case 22: HPI = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'en_curid' field.
   * @return The value of the 'en_curid' field.
   */
  public java.lang.CharSequence getEnCurid() {
    return en_curid;
  }

  /**
   * Sets the value of the 'en_curid' field.
   * @param value the value to set.
   */
  public void setEnCurid(java.lang.CharSequence value) {
    this.en_curid = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'numlangs' field.
   * @return The value of the 'numlangs' field.
   */
  public java.lang.CharSequence getNumlangs() {
    return numlangs;
  }

  /**
   * Sets the value of the 'numlangs' field.
   * @param value the value to set.
   */
  public void setNumlangs(java.lang.CharSequence value) {
    this.numlangs = value;
  }

  /**
   * Gets the value of the 'birthcity' field.
   * @return The value of the 'birthcity' field.
   */
  public java.lang.CharSequence getBirthcity() {
    return birthcity;
  }

  /**
   * Sets the value of the 'birthcity' field.
   * @param value the value to set.
   */
  public void setBirthcity(java.lang.CharSequence value) {
    this.birthcity = value;
  }

  /**
   * Gets the value of the 'birthstate' field.
   * @return The value of the 'birthstate' field.
   */
  public java.lang.CharSequence getBirthstate() {
    return birthstate;
  }

  /**
   * Sets the value of the 'birthstate' field.
   * @param value the value to set.
   */
  public void setBirthstate(java.lang.CharSequence value) {
    this.birthstate = value;
  }

  /**
   * Gets the value of the 'countryName' field.
   * @return The value of the 'countryName' field.
   */
  public java.lang.CharSequence getCountryName() {
    return countryName;
  }

  /**
   * Sets the value of the 'countryName' field.
   * @param value the value to set.
   */
  public void setCountryName(java.lang.CharSequence value) {
    this.countryName = value;
  }

  /**
   * Gets the value of the 'countryCode' field.
   * @return The value of the 'countryCode' field.
   */
  public java.lang.CharSequence getCountryCode() {
    return countryCode;
  }

  /**
   * Sets the value of the 'countryCode' field.
   * @param value the value to set.
   */
  public void setCountryCode(java.lang.CharSequence value) {
    this.countryCode = value;
  }

  /**
   * Gets the value of the 'countryCode3' field.
   * @return The value of the 'countryCode3' field.
   */
  public java.lang.CharSequence getCountryCode3() {
    return countryCode3;
  }

  /**
   * Sets the value of the 'countryCode3' field.
   * @param value the value to set.
   */
  public void setCountryCode3(java.lang.CharSequence value) {
    this.countryCode3 = value;
  }

  /**
   * Gets the value of the 'LAT' field.
   * @return The value of the 'LAT' field.
   */
  public java.lang.CharSequence getLAT() {
    return LAT;
  }

  /**
   * Sets the value of the 'LAT' field.
   * @param value the value to set.
   */
  public void setLAT(java.lang.CharSequence value) {
    this.LAT = value;
  }

  /**
   * Gets the value of the 'LON' field.
   * @return The value of the 'LON' field.
   */
  public java.lang.CharSequence getLON() {
    return LON;
  }

  /**
   * Sets the value of the 'LON' field.
   * @param value the value to set.
   */
  public void setLON(java.lang.CharSequence value) {
    this.LON = value;
  }

  /**
   * Gets the value of the 'continentName' field.
   * @return The value of the 'continentName' field.
   */
  public java.lang.CharSequence getContinentName() {
    return continentName;
  }

  /**
   * Sets the value of the 'continentName' field.
   * @param value the value to set.
   */
  public void setContinentName(java.lang.CharSequence value) {
    this.continentName = value;
  }

  /**
   * Gets the value of the 'birthyear' field.
   * @return The value of the 'birthyear' field.
   */
  public java.lang.CharSequence getBirthyear() {
    return birthyear;
  }

  /**
   * Sets the value of the 'birthyear' field.
   * @param value the value to set.
   */
  public void setBirthyear(java.lang.CharSequence value) {
    this.birthyear = value;
  }

  /**
   * Gets the value of the 'gender' field.
   * @return The value of the 'gender' field.
   */
  public java.lang.CharSequence getGender() {
    return gender;
  }

  /**
   * Sets the value of the 'gender' field.
   * @param value the value to set.
   */
  public void setGender(java.lang.CharSequence value) {
    this.gender = value;
  }

  /**
   * Gets the value of the 'occupation' field.
   * @return The value of the 'occupation' field.
   */
  public java.lang.CharSequence getOccupation() {
    return occupation;
  }

  /**
   * Sets the value of the 'occupation' field.
   * @param value the value to set.
   */
  public void setOccupation(java.lang.CharSequence value) {
    this.occupation = value;
  }

  /**
   * Gets the value of the 'industry' field.
   * @return The value of the 'industry' field.
   */
  public java.lang.CharSequence getIndustry() {
    return industry;
  }

  /**
   * Sets the value of the 'industry' field.
   * @param value the value to set.
   */
  public void setIndustry(java.lang.CharSequence value) {
    this.industry = value;
  }

  /**
   * Gets the value of the 'domain' field.
   * @return The value of the 'domain' field.
   */
  public java.lang.CharSequence getDomain() {
    return domain;
  }

  /**
   * Sets the value of the 'domain' field.
   * @param value the value to set.
   */
  public void setDomain(java.lang.CharSequence value) {
    this.domain = value;
  }

  /**
   * Gets the value of the 'TotalPageViews' field.
   * @return The value of the 'TotalPageViews' field.
   */
  public java.lang.CharSequence getTotalPageViews() {
    return TotalPageViews;
  }

  /**
   * Sets the value of the 'TotalPageViews' field.
   * @param value the value to set.
   */
  public void setTotalPageViews(java.lang.CharSequence value) {
    this.TotalPageViews = value;
  }

  /**
   * Gets the value of the 'L_star' field.
   * @return The value of the 'L_star' field.
   */
  public java.lang.CharSequence getLStar() {
    return L_star;
  }

  /**
   * Sets the value of the 'L_star' field.
   * @param value the value to set.
   */
  public void setLStar(java.lang.CharSequence value) {
    this.L_star = value;
  }

  /**
   * Gets the value of the 'StdDevPageViews' field.
   * @return The value of the 'StdDevPageViews' field.
   */
  public java.lang.CharSequence getStdDevPageViews() {
    return StdDevPageViews;
  }

  /**
   * Sets the value of the 'StdDevPageViews' field.
   * @param value the value to set.
   */
  public void setStdDevPageViews(java.lang.CharSequence value) {
    this.StdDevPageViews = value;
  }

  /**
   * Gets the value of the 'PageViewsEnglish' field.
   * @return The value of the 'PageViewsEnglish' field.
   */
  public java.lang.CharSequence getPageViewsEnglish() {
    return PageViewsEnglish;
  }

  /**
   * Sets the value of the 'PageViewsEnglish' field.
   * @param value the value to set.
   */
  public void setPageViewsEnglish(java.lang.CharSequence value) {
    this.PageViewsEnglish = value;
  }

  /**
   * Gets the value of the 'PageViewsNonEnglish' field.
   * @return The value of the 'PageViewsNonEnglish' field.
   */
  public java.lang.CharSequence getPageViewsNonEnglish() {
    return PageViewsNonEnglish;
  }

  /**
   * Sets the value of the 'PageViewsNonEnglish' field.
   * @param value the value to set.
   */
  public void setPageViewsNonEnglish(java.lang.CharSequence value) {
    this.PageViewsNonEnglish = value;
  }

  /**
   * Gets the value of the 'AverageViews' field.
   * @return The value of the 'AverageViews' field.
   */
  public java.lang.CharSequence getAverageViews() {
    return AverageViews;
  }

  /**
   * Sets the value of the 'AverageViews' field.
   * @param value the value to set.
   */
  public void setAverageViews(java.lang.CharSequence value) {
    this.AverageViews = value;
  }

  /**
   * Gets the value of the 'HPI' field.
   * @return The value of the 'HPI' field.
   */
  public java.lang.CharSequence getHPI() {
    return HPI;
  }

  /**
   * Sets the value of the 'HPI' field.
   * @param value the value to set.
   */
  public void setHPI(java.lang.CharSequence value) {
    this.HPI = value;
  }

  /**
   * Creates a new Pantheon RecordBuilder.
   * @return A new Pantheon RecordBuilder
   */
  public static parquetconverter.Pantheon.Builder newBuilder() {
    return new parquetconverter.Pantheon.Builder();
  }

  /**
   * Creates a new Pantheon RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Pantheon RecordBuilder
   */
  public static parquetconverter.Pantheon.Builder newBuilder(parquetconverter.Pantheon.Builder other) {
    return new parquetconverter.Pantheon.Builder(other);
  }

  /**
   * Creates a new Pantheon RecordBuilder by copying an existing Pantheon instance.
   * @param other The existing instance to copy.
   * @return A new Pantheon RecordBuilder
   */
  public static parquetconverter.Pantheon.Builder newBuilder(parquetconverter.Pantheon other) {
    return new parquetconverter.Pantheon.Builder(other);
  }

  /**
   * RecordBuilder for Pantheon instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Pantheon>
    implements org.apache.avro.data.RecordBuilder<Pantheon> {

    private java.lang.CharSequence en_curid;
    private java.lang.CharSequence name;
    private java.lang.CharSequence numlangs;
    private java.lang.CharSequence birthcity;
    private java.lang.CharSequence birthstate;
    private java.lang.CharSequence countryName;
    private java.lang.CharSequence countryCode;
    private java.lang.CharSequence countryCode3;
    private java.lang.CharSequence LAT;
    private java.lang.CharSequence LON;
    private java.lang.CharSequence continentName;
    private java.lang.CharSequence birthyear;
    private java.lang.CharSequence gender;
    private java.lang.CharSequence occupation;
    private java.lang.CharSequence industry;
    private java.lang.CharSequence domain;
    private java.lang.CharSequence TotalPageViews;
    private java.lang.CharSequence L_star;
    private java.lang.CharSequence StdDevPageViews;
    private java.lang.CharSequence PageViewsEnglish;
    private java.lang.CharSequence PageViewsNonEnglish;
    private java.lang.CharSequence AverageViews;
    private java.lang.CharSequence HPI;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(parquetconverter.Pantheon.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.en_curid)) {
        this.en_curid = data().deepCopy(fields()[0].schema(), other.en_curid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.numlangs)) {
        this.numlangs = data().deepCopy(fields()[2].schema(), other.numlangs);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.birthcity)) {
        this.birthcity = data().deepCopy(fields()[3].schema(), other.birthcity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.birthstate)) {
        this.birthstate = data().deepCopy(fields()[4].schema(), other.birthstate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.countryName)) {
        this.countryName = data().deepCopy(fields()[5].schema(), other.countryName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[6].schema(), other.countryCode);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.countryCode3)) {
        this.countryCode3 = data().deepCopy(fields()[7].schema(), other.countryCode3);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.LAT)) {
        this.LAT = data().deepCopy(fields()[8].schema(), other.LAT);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.LON)) {
        this.LON = data().deepCopy(fields()[9].schema(), other.LON);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.continentName)) {
        this.continentName = data().deepCopy(fields()[10].schema(), other.continentName);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.birthyear)) {
        this.birthyear = data().deepCopy(fields()[11].schema(), other.birthyear);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.gender)) {
        this.gender = data().deepCopy(fields()[12].schema(), other.gender);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.occupation)) {
        this.occupation = data().deepCopy(fields()[13].schema(), other.occupation);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.industry)) {
        this.industry = data().deepCopy(fields()[14].schema(), other.industry);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.domain)) {
        this.domain = data().deepCopy(fields()[15].schema(), other.domain);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.TotalPageViews)) {
        this.TotalPageViews = data().deepCopy(fields()[16].schema(), other.TotalPageViews);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.L_star)) {
        this.L_star = data().deepCopy(fields()[17].schema(), other.L_star);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.StdDevPageViews)) {
        this.StdDevPageViews = data().deepCopy(fields()[18].schema(), other.StdDevPageViews);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.PageViewsEnglish)) {
        this.PageViewsEnglish = data().deepCopy(fields()[19].schema(), other.PageViewsEnglish);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.PageViewsNonEnglish)) {
        this.PageViewsNonEnglish = data().deepCopy(fields()[20].schema(), other.PageViewsNonEnglish);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.AverageViews)) {
        this.AverageViews = data().deepCopy(fields()[21].schema(), other.AverageViews);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.HPI)) {
        this.HPI = data().deepCopy(fields()[22].schema(), other.HPI);
        fieldSetFlags()[22] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing Pantheon instance
     * @param other The existing instance to copy.
     */
    private Builder(parquetconverter.Pantheon other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.en_curid)) {
        this.en_curid = data().deepCopy(fields()[0].schema(), other.en_curid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.numlangs)) {
        this.numlangs = data().deepCopy(fields()[2].schema(), other.numlangs);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.birthcity)) {
        this.birthcity = data().deepCopy(fields()[3].schema(), other.birthcity);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.birthstate)) {
        this.birthstate = data().deepCopy(fields()[4].schema(), other.birthstate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.countryName)) {
        this.countryName = data().deepCopy(fields()[5].schema(), other.countryName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[6].schema(), other.countryCode);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.countryCode3)) {
        this.countryCode3 = data().deepCopy(fields()[7].schema(), other.countryCode3);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.LAT)) {
        this.LAT = data().deepCopy(fields()[8].schema(), other.LAT);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.LON)) {
        this.LON = data().deepCopy(fields()[9].schema(), other.LON);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.continentName)) {
        this.continentName = data().deepCopy(fields()[10].schema(), other.continentName);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.birthyear)) {
        this.birthyear = data().deepCopy(fields()[11].schema(), other.birthyear);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.gender)) {
        this.gender = data().deepCopy(fields()[12].schema(), other.gender);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.occupation)) {
        this.occupation = data().deepCopy(fields()[13].schema(), other.occupation);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.industry)) {
        this.industry = data().deepCopy(fields()[14].schema(), other.industry);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.domain)) {
        this.domain = data().deepCopy(fields()[15].schema(), other.domain);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.TotalPageViews)) {
        this.TotalPageViews = data().deepCopy(fields()[16].schema(), other.TotalPageViews);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.L_star)) {
        this.L_star = data().deepCopy(fields()[17].schema(), other.L_star);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.StdDevPageViews)) {
        this.StdDevPageViews = data().deepCopy(fields()[18].schema(), other.StdDevPageViews);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.PageViewsEnglish)) {
        this.PageViewsEnglish = data().deepCopy(fields()[19].schema(), other.PageViewsEnglish);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.PageViewsNonEnglish)) {
        this.PageViewsNonEnglish = data().deepCopy(fields()[20].schema(), other.PageViewsNonEnglish);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.AverageViews)) {
        this.AverageViews = data().deepCopy(fields()[21].schema(), other.AverageViews);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.HPI)) {
        this.HPI = data().deepCopy(fields()[22].schema(), other.HPI);
        fieldSetFlags()[22] = true;
      }
    }

    /**
      * Gets the value of the 'en_curid' field.
      * @return The value.
      */
    public java.lang.CharSequence getEnCurid() {
      return en_curid;
    }

    /**
      * Sets the value of the 'en_curid' field.
      * @param value The value of 'en_curid'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setEnCurid(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.en_curid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'en_curid' field has been set.
      * @return True if the 'en_curid' field has been set, false otherwise.
      */
    public boolean hasEnCurid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'en_curid' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearEnCurid() {
      en_curid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'numlangs' field.
      * @return The value.
      */
    public java.lang.CharSequence getNumlangs() {
      return numlangs;
    }

    /**
      * Sets the value of the 'numlangs' field.
      * @param value The value of 'numlangs'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setNumlangs(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.numlangs = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'numlangs' field has been set.
      * @return True if the 'numlangs' field has been set, false otherwise.
      */
    public boolean hasNumlangs() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'numlangs' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearNumlangs() {
      numlangs = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthcity' field.
      * @return The value.
      */
    public java.lang.CharSequence getBirthcity() {
      return birthcity;
    }

    /**
      * Sets the value of the 'birthcity' field.
      * @param value The value of 'birthcity'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setBirthcity(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.birthcity = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'birthcity' field has been set.
      * @return True if the 'birthcity' field has been set, false otherwise.
      */
    public boolean hasBirthcity() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'birthcity' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearBirthcity() {
      birthcity = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthstate' field.
      * @return The value.
      */
    public java.lang.CharSequence getBirthstate() {
      return birthstate;
    }

    /**
      * Sets the value of the 'birthstate' field.
      * @param value The value of 'birthstate'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setBirthstate(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.birthstate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'birthstate' field has been set.
      * @return True if the 'birthstate' field has been set, false otherwise.
      */
    public boolean hasBirthstate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'birthstate' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearBirthstate() {
      birthstate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountryName() {
      return countryName;
    }

    /**
      * Sets the value of the 'countryName' field.
      * @param value The value of 'countryName'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setCountryName(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.countryName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'countryName' field has been set.
      * @return True if the 'countryName' field has been set, false otherwise.
      */
    public boolean hasCountryName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'countryName' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearCountryName() {
      countryName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryCode' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountryCode() {
      return countryCode;
    }

    /**
      * Sets the value of the 'countryCode' field.
      * @param value The value of 'countryCode'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setCountryCode(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.countryCode = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'countryCode' field has been set.
      * @return True if the 'countryCode' field has been set, false otherwise.
      */
    public boolean hasCountryCode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'countryCode' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearCountryCode() {
      countryCode = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryCode3' field.
      * @return The value.
      */
    public java.lang.CharSequence getCountryCode3() {
      return countryCode3;
    }

    /**
      * Sets the value of the 'countryCode3' field.
      * @param value The value of 'countryCode3'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setCountryCode3(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.countryCode3 = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'countryCode3' field has been set.
      * @return True if the 'countryCode3' field has been set, false otherwise.
      */
    public boolean hasCountryCode3() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'countryCode3' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearCountryCode3() {
      countryCode3 = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'LAT' field.
      * @return The value.
      */
    public java.lang.CharSequence getLAT() {
      return LAT;
    }

    /**
      * Sets the value of the 'LAT' field.
      * @param value The value of 'LAT'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setLAT(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.LAT = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'LAT' field has been set.
      * @return True if the 'LAT' field has been set, false otherwise.
      */
    public boolean hasLAT() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'LAT' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearLAT() {
      LAT = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'LON' field.
      * @return The value.
      */
    public java.lang.CharSequence getLON() {
      return LON;
    }

    /**
      * Sets the value of the 'LON' field.
      * @param value The value of 'LON'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setLON(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.LON = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'LON' field has been set.
      * @return True if the 'LON' field has been set, false otherwise.
      */
    public boolean hasLON() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'LON' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearLON() {
      LON = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'continentName' field.
      * @return The value.
      */
    public java.lang.CharSequence getContinentName() {
      return continentName;
    }

    /**
      * Sets the value of the 'continentName' field.
      * @param value The value of 'continentName'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setContinentName(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.continentName = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'continentName' field has been set.
      * @return True if the 'continentName' field has been set, false otherwise.
      */
    public boolean hasContinentName() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'continentName' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearContinentName() {
      continentName = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthyear' field.
      * @return The value.
      */
    public java.lang.CharSequence getBirthyear() {
      return birthyear;
    }

    /**
      * Sets the value of the 'birthyear' field.
      * @param value The value of 'birthyear'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setBirthyear(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.birthyear = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'birthyear' field has been set.
      * @return True if the 'birthyear' field has been set, false otherwise.
      */
    public boolean hasBirthyear() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'birthyear' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearBirthyear() {
      birthyear = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'gender' field.
      * @return The value.
      */
    public java.lang.CharSequence getGender() {
      return gender;
    }

    /**
      * Sets the value of the 'gender' field.
      * @param value The value of 'gender'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setGender(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.gender = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'gender' field has been set.
      * @return True if the 'gender' field has been set, false otherwise.
      */
    public boolean hasGender() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'gender' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearGender() {
      gender = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'occupation' field.
      * @return The value.
      */
    public java.lang.CharSequence getOccupation() {
      return occupation;
    }

    /**
      * Sets the value of the 'occupation' field.
      * @param value The value of 'occupation'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setOccupation(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.occupation = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'occupation' field has been set.
      * @return True if the 'occupation' field has been set, false otherwise.
      */
    public boolean hasOccupation() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'occupation' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearOccupation() {
      occupation = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'industry' field.
      * @return The value.
      */
    public java.lang.CharSequence getIndustry() {
      return industry;
    }

    /**
      * Sets the value of the 'industry' field.
      * @param value The value of 'industry'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setIndustry(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.industry = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'industry' field has been set.
      * @return True if the 'industry' field has been set, false otherwise.
      */
    public boolean hasIndustry() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'industry' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearIndustry() {
      industry = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'domain' field.
      * @return The value.
      */
    public java.lang.CharSequence getDomain() {
      return domain;
    }

    /**
      * Sets the value of the 'domain' field.
      * @param value The value of 'domain'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setDomain(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.domain = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'domain' field has been set.
      * @return True if the 'domain' field has been set, false otherwise.
      */
    public boolean hasDomain() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'domain' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearDomain() {
      domain = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'TotalPageViews' field.
      * @return The value.
      */
    public java.lang.CharSequence getTotalPageViews() {
      return TotalPageViews;
    }

    /**
      * Sets the value of the 'TotalPageViews' field.
      * @param value The value of 'TotalPageViews'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setTotalPageViews(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.TotalPageViews = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'TotalPageViews' field has been set.
      * @return True if the 'TotalPageViews' field has been set, false otherwise.
      */
    public boolean hasTotalPageViews() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'TotalPageViews' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearTotalPageViews() {
      TotalPageViews = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'L_star' field.
      * @return The value.
      */
    public java.lang.CharSequence getLStar() {
      return L_star;
    }

    /**
      * Sets the value of the 'L_star' field.
      * @param value The value of 'L_star'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setLStar(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.L_star = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'L_star' field has been set.
      * @return True if the 'L_star' field has been set, false otherwise.
      */
    public boolean hasLStar() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'L_star' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearLStar() {
      L_star = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'StdDevPageViews' field.
      * @return The value.
      */
    public java.lang.CharSequence getStdDevPageViews() {
      return StdDevPageViews;
    }

    /**
      * Sets the value of the 'StdDevPageViews' field.
      * @param value The value of 'StdDevPageViews'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setStdDevPageViews(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.StdDevPageViews = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'StdDevPageViews' field has been set.
      * @return True if the 'StdDevPageViews' field has been set, false otherwise.
      */
    public boolean hasStdDevPageViews() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'StdDevPageViews' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearStdDevPageViews() {
      StdDevPageViews = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'PageViewsEnglish' field.
      * @return The value.
      */
    public java.lang.CharSequence getPageViewsEnglish() {
      return PageViewsEnglish;
    }

    /**
      * Sets the value of the 'PageViewsEnglish' field.
      * @param value The value of 'PageViewsEnglish'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setPageViewsEnglish(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.PageViewsEnglish = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'PageViewsEnglish' field has been set.
      * @return True if the 'PageViewsEnglish' field has been set, false otherwise.
      */
    public boolean hasPageViewsEnglish() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'PageViewsEnglish' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearPageViewsEnglish() {
      PageViewsEnglish = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'PageViewsNonEnglish' field.
      * @return The value.
      */
    public java.lang.CharSequence getPageViewsNonEnglish() {
      return PageViewsNonEnglish;
    }

    /**
      * Sets the value of the 'PageViewsNonEnglish' field.
      * @param value The value of 'PageViewsNonEnglish'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setPageViewsNonEnglish(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.PageViewsNonEnglish = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'PageViewsNonEnglish' field has been set.
      * @return True if the 'PageViewsNonEnglish' field has been set, false otherwise.
      */
    public boolean hasPageViewsNonEnglish() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'PageViewsNonEnglish' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearPageViewsNonEnglish() {
      PageViewsNonEnglish = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'AverageViews' field.
      * @return The value.
      */
    public java.lang.CharSequence getAverageViews() {
      return AverageViews;
    }

    /**
      * Sets the value of the 'AverageViews' field.
      * @param value The value of 'AverageViews'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setAverageViews(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.AverageViews = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'AverageViews' field has been set.
      * @return True if the 'AverageViews' field has been set, false otherwise.
      */
    public boolean hasAverageViews() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'AverageViews' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearAverageViews() {
      AverageViews = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'HPI' field.
      * @return The value.
      */
    public java.lang.CharSequence getHPI() {
      return HPI;
    }

    /**
      * Sets the value of the 'HPI' field.
      * @param value The value of 'HPI'.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder setHPI(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.HPI = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'HPI' field has been set.
      * @return True if the 'HPI' field has been set, false otherwise.
      */
    public boolean hasHPI() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'HPI' field.
      * @return This builder.
      */
    public parquetconverter.Pantheon.Builder clearHPI() {
      HPI = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Pantheon build() {
      try {
        Pantheon record = new Pantheon();
        record.en_curid = fieldSetFlags()[0] ? this.en_curid : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.numlangs = fieldSetFlags()[2] ? this.numlangs : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.birthcity = fieldSetFlags()[3] ? this.birthcity : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.birthstate = fieldSetFlags()[4] ? this.birthstate : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.countryName = fieldSetFlags()[5] ? this.countryName : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.countryCode = fieldSetFlags()[6] ? this.countryCode : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.countryCode3 = fieldSetFlags()[7] ? this.countryCode3 : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.LAT = fieldSetFlags()[8] ? this.LAT : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.LON = fieldSetFlags()[9] ? this.LON : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.continentName = fieldSetFlags()[10] ? this.continentName : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.birthyear = fieldSetFlags()[11] ? this.birthyear : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.gender = fieldSetFlags()[12] ? this.gender : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.occupation = fieldSetFlags()[13] ? this.occupation : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.industry = fieldSetFlags()[14] ? this.industry : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.domain = fieldSetFlags()[15] ? this.domain : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.TotalPageViews = fieldSetFlags()[16] ? this.TotalPageViews : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.L_star = fieldSetFlags()[17] ? this.L_star : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.StdDevPageViews = fieldSetFlags()[18] ? this.StdDevPageViews : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.PageViewsEnglish = fieldSetFlags()[19] ? this.PageViewsEnglish : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.PageViewsNonEnglish = fieldSetFlags()[20] ? this.PageViewsNonEnglish : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.AverageViews = fieldSetFlags()[21] ? this.AverageViews : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.HPI = fieldSetFlags()[22] ? this.HPI : (java.lang.CharSequence) defaultValue(fields()[22]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Pantheon>
    WRITER$ = (org.apache.avro.io.DatumWriter<Pantheon>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Pantheon>
    READER$ = (org.apache.avro.io.DatumReader<Pantheon>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
